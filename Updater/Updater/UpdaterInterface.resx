<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2nITAN14GgD0bxMA5HITAO1wHgDvex0A9HEUAPhxFADzdBsA+HYaAPN7HgD5eBsA23shAN95
        KwDffy4A5XQmAOpwIADrdCMA7ncjAOl0JADhfiMA7HomAOR4KQDieywA43wvAOR9LQDpeSgA6nwqAO1/
        KgDofSwA8nskAPl9IQDwfSgA3oQtAN+BMQDfiDEA5YAiAOCCJwDmhCcA5oUoAOyCLQD1gCYA+oEjAPGB
        KgD2gSkA8IMsAPCGLgD0hi8A+4YvAPeILQD8iysA/5EvAOKAMADkgTAA4oUzAOWGNADpgDAA6YYyAOGK
        MwDhiDYA5Io3AOOMNgDtiDIA6Yg0AOqMNwDhjzsA4Y09AOePPgDojTgA74w4AOmJPQDwiDEA9YoxAPaM
        MwDxijQA+ogwAPSOOgDikDwA5ZA9AP2SMwD6kTsA8Zs+AP2aPACulXoA3ZpaAO2ZQADomUYA7ZxEAOWV
        TgDmmEsA6JhIAOmfTwD2lkEA+JVEAPSdQgD1nUQA/p5DAPqcSwDnnlAA5ZlUAOOdXAD+okQA9qZMAP6l
        TQD1rk8A/6hKAP6qTQD/rE8A6qFVAOqkWgDsqFkA8KdRAPuiVADwqVIA8KpWAP6sVADwplgA/KpcAP+w
        VQD/s1sA/7heAOyrYQDnp2sA6atuAPurYQDusmoA/7JiAPm2YQD/tGIA/7NlAP+2ZgDxuGQA/7pgAP+9
        YwD6vWYA8bJpAPe3aAD9tGsA8L1tAP+4agDpr3oA7rJxAO+4cgDiuHoA77p/APu2cAD0vnUA/rt0APO/
        eQD0vHgA+7x4AP/AZwD7xmUA9sduAP7AaQD/xW4A/cpsAPTFcwDzxXUA+cd3AP/LdADzw30A9cN+APPH
        fAD+wXwA/855APrPfACampoAtqyaALasnQCkoaEApKSkAKimpgCtpqYAraioAK6trQCwqqoAu7irALu4
        rAC5t7cAvLu7ANS7kgDUvpoA1LudAO65hAD2vYEAwL+/AOLCiQDvy4sA88GCAPHEggDzwoUA8sWEAP3E
        ggD0y4MA/8iFAPHAjADzx44A98qLAP7LigD804EA/9SAAPnQiwDmzJAA8sSTAPHElwD+zpAA9M+eAPjO
        mADu0pMA7NicAP3RlAD63ZIA9dKZAP3VmgD/2J0A2NK3ANnSuwDyy6IA88ykAOnfrQD00KUA99WkAPnX
        owD+3KMA+NyrAOvgpwDq4KsA/uKsAP/xrQD+6LQA/em5AP7wvQDDwsIAx8fHAMnFxQDLysoAzs7OANjV
        xADV1dUA59/fAP7xwwD/9ssA7uHhAPPi4gDw5eUA9OXlAPbp6QD37OwA+O7uAPny8gD79fUA/Pn5AP7+
        /gD///8AAAAAAAAAAAAAAAAAAAAAqKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKiurqgAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMVUsfX1sVTFAAAAAAAAAAAAAAAAAAAAAAAAAAAAzW2+qa/39/f3
        r6rAbc0AAAAAAAAAAAAAAAAAAAAAAG6i6bOr9Pf39/f0q7Lyv24AAAAAAAAAAAAAAAAAANxbj/Pvrfb4
        +Pj4+Pj2rdnWWVvcAAAAAAAAAAAAAADOXGTe2qz2+fn5+fn5+fn2rLfBbW/bAAAAAAAAAAAAAFeV0Lis
        8fr6+vr6+vr6+vrxrLbDi1sAAAAAAAAAAABaoMaRrLC0tOz7+/v7+/vstLSwrKSfp1oAAAAAAAAAuXDL
        jg4PI2Pdtfv7+/v7+7Xd5mMjQ56Ec7kAAAAAAAA+m6MZGDU3PLy7/Pz8/Pz8u+TVPDc1RJqHPgAAAAAA
        AFaJRxcaNjhPzOr9/f39/f3q44s9ODYacp1YAAAAAAB8X3UQFxo4c8nT6/39/f39/euQVz04NhpAmWd8
        AAAAADxLORQbHoCmytLt/v7+/v7+7VVFQDo5HhtpbDwAAAAAJjARFBtGmJyhve7////////uVUFAOikc
        G1JTJgAAAAAnSRESSHd5hpu/8P////////BVQDopKRwWLkooAAAAACUxBSxmbHd4eZPt8PDw8PDw7Vk/
        LykdFhYTUCUAAAAAAjQfLWFmamx3eHh5hYVgS0tISC8uLCEfHwUyAgAAAAANMwsfU1NmZmprbHd3eHhL
        SC8vLiwhHx8JCSANAAAAAGULCgk0UFNhZmp0d3h4eGJdTUlTUTIqCwkJBmUAAAAAAAQKCTM0U2ZodHiB
        g4yMcWJ4dGhhUCsJCQcEAAAAAAAAAQMHK1BhaHh/g4yUlJSKfXZxYl5RLQoHBwEAAAAAAAB7BAggUWh2
        goyUpaWll6WSin12cWJRDAgEewAAAAAAAAANAzFicX2MpcLEyMC6yMSXlIp9cWIrBw0AAAAAAAAAAAAB
        THF9ipTEyM/P1NTUz8SllIp9cSABAAAAAAAAAAAAAI0VdoqUws/U2NHR19jXz8jClIpxBI0AAAAAAAAA
        AAAAAI07lMLI1Njh4d/f4OHY1MilkhWNAAAAAAAAAAAAAAAAAABDls/X4eXl5eLi5eHXz4giAAAAAAAA
        AAAAAAAAAAAAAAB7Tn7U5efn6Oflx3oiewAAAAAAAAAAAAAAAAAAAAAAAAAAAGUNQk5OJA1lAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/+f////D////AP//+AAf//AAD//AAAP/gAAB/4AAAf8AAAD+AAAAfgAAAH4AAAB8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAAD4AAAB+AAAAfgAAAH8AAAD/gAAB/4AAAf/AAAP/8A
        AP//gAH///AP////////////
</value>
  </data>
</root>